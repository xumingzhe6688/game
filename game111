import random
def __init__(self, name):
    self.name = name
    self.level = 1
    self.exp = 0
    self.exp_to_level_up = 0
    self.hp = 0
    self.mp = 0
    self.attack = 0
    self.defense = 0
    self.gold = 0
    self.items = []
choice = input("请输入选项：").strip()

# 初始化玩家属性
player = {
    "name": "勇者",
    "hp": 100,
    "mp": 50,
    "attack": 10,
    "defense": 5
}

# 定义场景
scenes = [
    {
        "name": "起始之地",
        "description": "你身处在一片茂密的森林中。"
    },
    {
        "name": "迷雾山脉",
        "description": "你来到了一座高耸入云的山脉，四周笼罩着浓雾。"
    },
    {
        "name": "沙漠之海",
        "description": "你穿越了一片广袤无垠的沙漠，烈日炎炎，汗水不停流淌。"
    },
    {
        "name": "冰封禁地",
        "description": "你踏入了一片永久被冰雪覆盖的土地，刺骨的寒风让你不断颤抖。"
    }
]

# 定义敌人
enemies = [
    {
        "name": "哥布林",
        "hp": 30,
        "attack": 8,
        "defense": 2
    },
    {
        "name": "骷髅战士",
        "hp": 50,
        "attack": 12,
        "defense": 5
    },
    {
        "name": "巨型蝙蝠",
        "hp": 40,
        "attack": 10,
        "defense": 3
    },
    {
        "name": "狼人",
        "hp": 60,
        "attack": 15,
        "defense": 8
    },
    {
        "name": "石头怪物",
        "hp": 80,
        "attack": 20,
        "defense": 10
    }
]

# 定义技能
skills = [
    {
        "name": "火球术",
        "cost": 10,
        "attack_modifier": 1.2
    },
    {
        "name": "治疗术",
        "cost": 8,
        "heal_amount": 20
    },
    {
        "name": "闪电术",
        "cost": 12,
        "attack_modifier": 1.5
    },
    {
        "name": "毒箭术",
        "cost": 15,
        "attack_modifier": 1.8
    }
]

# 定义道具
items = [
    {
        "name": "草药",
        "heal_amount": 30
    },
    {
        "name": "魔法药水",
        "mp_restore_amount": 20
    },
    {
        "name": "铁剑",
        "attack_increase": 5
    },
    {
        "name": "铁甲",
        "defense_increase": 5
    }
]

# 定义事件
events = [
    {
        "name": "遭遇哥布林",
        "enemy": enemies[0]
    },
    {
        "name": "发现草药",
        "item": items[0]
    },
    {
        "name": "遭遇骷髅战士",
        "enemy": enemies[1]
    },
    {
        "name": "发现宝藏",
        "item": items[2]
    },
    {
        "name": "遭遇巨型蝙蝠",
        "enemy": enemies[2]
    },
    {
        "name": "发现魔法药水",
        "mp_restore_amount": 30
    },
    {
        "name": "遭遇狼人",
        "enemy": enemies[3]
    },
    {
        "name": "升级！",
        "level_up": True
    },
    {
        "name": "发现铁剑",
        "item": items[2]
    },
    {
        "name": "遭遇石头怪物",
        "enemy": enemies[4]
    },
    {
        "name": "发现铁甲",
        "item": items[3]
    }
]

# 定义NPC
npcs = [
    {
        "name": "村民",
        "dialogue": "勇者啊，听说沙漠之海深处有一座神秘的古城，传说里面藏有无数宝藏和珍贵的武器装备。但是那里危机四伏，前往需要足够的实力和勇气。"
    },
    {
        "name": "商人",
        "dialogue": "欢迎光临！我这里有各种各样的药品、武器和防具，全部保证正品，价格公道实惠。"
    }
]

# 定义场景事件
scene_events = {
    0: [events[1]],
    1: [events[0], events[2], events[3]],
    2: [events[4], events[5]],
    3: [events[6], events[7]]
}

# 定义玩家等级和升级经验
player["level"] = 1
player["exp"] = 0
player["exp_to_level_up"] = 100

# 定义游戏循环
while True:
    # 输出当前场景描述
    current_scene = scenes[random.randint(0, len(scenes)-1)]
    print("\n%s\n%s" % (current_scene["name"], current_scene["description"]))

    # 判断是否有场景事件发生
    if random.random() < 0.5 and scenes.index(current_scene) in scene_events:
        event = scene_events[scenes.index(current_scene)][random.randint(0, len(scene_events[scenes.index(current_scene)])-1)]

        # 处理场景事件
        if "enemy" in event:
            enemy = event["enemy"]
            print("你遭遇了一只%s，准备进行战斗！" % enemy["name"])

            # 开始战斗
            while player["hp"] > 0 and enemy["hp"] > 0:
                # 玩家选择动作
                print("\n你的状态：\nHP: %d/%d\nMP: %d/%d\n" % (player["hp"], 100, player["mp"], 50))
                print("请选择你要进行的动作：")
                print("1. 攻击")
                print("2. 技能")
                print("3. 道具")
                choice = input("请输入编号：")

                # 玩家攻击
                if choice == "1":
                    damage = max(0, player["attack"] - enemy["defense"])
                    enemy["hp"] -= damage
                    print("你对敌人造成了%d点伤害。" % damage)

                # 玩家使用技能
                elif choice == "2":
                    print("请选择你要使用的技能：")
                    for i, skill in enumerate(skills):
                        print("%d. %s（消耗魔法值：%d）" % (i+1, skill["name"], skill["cost"]))

                    while True:
                        skill_choice = input("请输入编号：")
                        try:
                            skill_choice = int(skill_choice)
                            if skill_choice < 1 or skill_choice > len(skills):
                                raise ValueError
                        except ValueError:
                            print("无效的选择，请重新输入。")
                            continue

                        break

                    skill = skills[skill_choice-1]
                    if player["mp"] < skill["cost"]:
                        print("你没有足够的魔法值使用该技能。")
                        continue

                    damage = max(0, int(player["attack"] * skill["attack_modifier"]) - enemy["defense"])
                    enemy["hp"] -= damage
                    player["mp"] -= skill["cost"]
                    print("你对敌人使用了%s，造成了%d点伤害。" % (skill["name"], damage))

                # 玩家使用道具
                elif choice == "3":
                    pass  # TODO: 实现道具系统

                else:
                    print("无效的选择，请重新输入。")
                    continue

                # 敌人攻击
                if enemy["hp"] > 0:
                    damage = max(0, enemy["attack"] - player["defense"])
                    player["hp"] -= damage
                    print("%s对你造成了%d点伤害。" % (enemy["name"], damage))

# 战斗结束，判断胜负
if player["hp"] <= 0:
    print("你被%s击败了，游戏结束！" % enemy["name"])
    break
else:
    print("你打败了%s，获得了%d点经验值！" % (enemy["name"], 20))

    # 玩家获得经验
    player["exp"] += 20
    if player["exp"] >= player["exp_to_level_up"]:
        player["level"] += 1
        player["exp"] -= player["exp_to_level_up"]
        player["exp_to_level_up"] = int(player["exp_to_level_up"] * 1.5)
        player["max_hp"] += 10
        player["attack"] += 5
        player["defense"] += 5
        print("\n恭喜你升级了！当前等级：%d" % player["level"])
        print("你的最大生命值增加了10点，攻击力和防御力各增加了5点。")
        
# 玩家使用道具
    elif choice == "3":
    # 输出玩家背包中的所有道具
        print("请选择你要使用的道具：")
    for i, item in enumerate(items):
        print("%d. %s" % (i+1, item["name"]))

    # 等待用户输入，并校验输入是否合法
    item_choice = input("请输入编号：")
    while not item_choice.isdigit() or int(item_choice) < 1 or int(item_choice) > len(items):
        print("无效的选择，请重新输入。")
        item_choice = input("请输入编号：")

    # 将字符串转换为整数
    item_choice = int(item_choice)

    # 根据用户选择的道具类型进行相应操作
    item = items[item_choice-1]
    if item["name"] == "草药":
        player["hp"] = min(100, player["hp"] + item["heal_amount"])
        print("你使用了草药，恢复了%d点生命值。" % item["heal_amount"])
    elif item["name"] == "魔法药水":
        player["mp"] = min(50, player["mp"] + item["mp_restore_amount"])
        print("你使用了魔法药水，恢复了%d点魔法值。" % item["mp_restore_amount"])
    elif item["name"] == "铁剑":
        player["attack"] += item["attack_increase"]
        print("你装备了铁剑，攻击力提升了%d点。" % item["attack_increase"])
    elif item["name"] == "铁甲":
        player["defense"] += item["defense_increase"]
        print("你穿上了铁甲，防御力提升了%d点。" % item["defense_increase"])
# 战斗事件
if "enemy" in event:
    enemy = event["enemy"]
    print("你遇到了一个%s！" % enemy["name"])
    while True:
        # 玩家选择攻击或逃跑
        choice = input("请选择：\n1. 攻击\n2. 逃跑\n")

        if choice == "1":
            # 玩家攻击
            damage = max(0, player["attack"] - enemy["defense"])
            enemy["hp"] -= damage
            print("你对敌人造成了%d点伤害。" % damage)

            # 敌人死亡
            if enemy["hp"] <= 0:
                print("敌人已经死亡。")
                break

            # 敌人攻击
            damage = max(0, enemy["attack"] - player["defense"])
            player["hp"] -= damage
            print("敌人对你造成了%d点伤害。" % damage)

        elif choice == "2":
            # 计算逃跑成功的概率
            success_rate = min(0.5, 0.1 + player["agility"] / (2 * enemy["agility"]))
            if random.random() < success_rate:
                print("你成功逃跑了。")
                break
            else:
                print("逃跑失败，你必须继续战斗。")

        # 玩家死亡
        if player["hp"] <= 0:
            print("你被打败了，游戏结束。")
            break
        else:
            print("你战胜了敌人！")

            # 获得经验值和金币
            exp = random.randint(10, 20)
            gold = random.randint(5, 10)
            player["exp"] += exp
            player["gold"] += gold
            print("你获得了%d点经验值和%d个金币。" % (exp, gold))

            # 判断是否升级
            if player["exp"] >= player["exp_to_level_up"]:
                player["level"] += 1
                player["exp"] -= player["exp_to_level_up"]
                player["exp_to_level_up"] = int(player["exp_to_level_up"] * 1.2)
                print("恭喜你升到了%d级！" % player["level"])

elif "item" in event:
    item = event["item"]
    print("你发现了一个%s。" % item["name"])

if choice == "1":
    # 打印玩家属性
    print_player_info(player)
elif choice == "2":
    # 进入战斗
    start_battle(player, monster)
elif choice == "3":
    # 输出玩家背包中的所有道具
    print("请选择你要使用的道具：")
    for i, item in enumerate(items):
        print("%d. %s" % (i+1, item["name"]))

    # 等待用户输入，并校验输入是否合法
    item_choice = input("请输入编号：")
    while not item_choice.isdigit() or int(item_choice) < 1 or int(item_choice) > len(items):
        print("无效的选择，请重新输入。")
        item_choice = input("请输入编号：")

    # 将字符串转换为整数
    item_choice = int(item_choice)

    # 使用选定的道具
    use_item(player, items[item_choice - 1])
else:
    print("无效的选择，请重新输入。")

    # 打印玩家当前等级和属性值
    print("\n恭喜你升级了！当前等级：%d" % player["level"])
    print("你的最大生命值增加了10点，攻击力和防御力各增加了5点。")
    print("恭喜你升到了%d级！你的属性得到了提升。" % player["level"])
    print("生命值： %d / 魔法值： %d / 攻击力： %d / 防御力： %d" % (player["hp"], player["mp"], player["attack"], player["defense"]))

# 输出玩家状态
def print_player_status(player):
    print("\n你当前的状态：")
    print("等级：%d" % player["level"])
    print("经验值：%d/%d" % (player["exp"], player["exp_to_level_up"]))
    print("生命值：%d/%d" % (player["hp"], 100))
    print("魔法值：%d/%d" % (player["mp"], 50))
    print("攻击力：%d" % player["attack"])
    print("防御力：%d" % player["defense"])
    print("金币：%d" % player["gold"])

# 玩家选择下一步行动并返回所选项编号
def select_next_action():
    print("\n请选择你要进行的下一步行动：")
    print("1. 前往下一个场景")
    print("2. 打开背包")
    print("3. 查看地图")
    choice = input("请输入编号：")
    return choice

# 输出场景内的NPC
if current_scene["name"] == "村庄":
    for npc in npcs:
        print("%s：%s" % (npc["name"], npc["dialogue"]))

# 输出玩家状态
print_player_status(player)

# 玩家选择下一步行动
choice = select_next_action()

# 玩家前往下一个场景
if choice == "1":
    continue


# 封装使用物品操作为函数
def use_item(player, item_choice):
    # 检查是否选择了有效的物品编号
    if 0 < item_choice <= len(player["items"]):
        item = player["items"][item_choice - 1]
        if item["name"] == "草药":
            # 使用草药恢复生命值
            player["hp"] += item["heal_amount"]
            player["hp"] = max(0, min(100, player["hp"]))
            item["quantity"] -= 1
            print("你使用了草药，恢复了%d点生命值。" % item["heal_amount"])
            if item["quantity"] == 0:
                del player["items"][item_choice - 1]

        elif item["name"] == "魔法药水":
            # 使用魔法药水恢复魔法值
            player["mp"] += item["mp_restore_amount"]
            player["mp"] = max(0, min(50, player["mp"]))
            item["quantity"] -= 1
            print("你使用了魔法药水，恢复了%d点魔法值。" % item["mp_restore_amount"])
            if item["quantity"] == 0:
                del player["items"][item_choice - 1]

        elif item["name"] == "铁剑":
            # 穿戴铁剑增加攻击力
            player["attack"] += item["attack_increase"]
            item["quantity"] -= 1
            print("你装备了铁剑，攻击力提升了%d点。" % item["attack_increase"])
            if item["quantity"] == 0:
                del player["items"][item_choice - 1]

        elif item["name"] == "铁甲":
            # 穿戴铁甲增加防御力
            player["defense"] += item["defense_increase"]
            item["quantity"] -= 1
            print("你穿上了铁甲，防御力提升了%d点。" % item["defense_increase"])
            if item["quantity"] == 0:
                del player["items"][item_choice - 1]
    else:
        print("无效的选择，请重新输入。")

# 玩家打开背包
  elif choice == "2"；
    print("\n你打开了背包，里面有如下物品：")
    for i, item in enumerate(player["items"]):
        print("%d. %s x%d" % (i+1, item["name"], item["quantity"]))

    item_choice = input("\n请输入你要使用的物品编号，或输入0返回上一级菜单：")
    try:
        item_choice = int(item_choice)
    except ValueError:
        print("无效的选择，请重新输入。")
        continue

    if item_choice == 0:
        continue

    # 使用选定的道具
    use_item(player, player["items"][item_choice - 1])

# 玩家查看地图
elif choice == "3":
    print("\n地图信息如下：")
    for i, scene in enumerate(scenes):
        print("%d. %s" % (i+1, scene["name"]))
    print("你当前在%s。" % current_scene["name"])

# 其他无效选择
else:
    print("无效的选择，请重新输入。")

# 游戏结束，输出最终状态
print("\n游戏结束。你的最终状态如下：")
print("等级：%d" % player["level"])
print("经验值：%d/%d" % (player["exp"], player["exp_to_level_up"]))
print("生命值：%d/%d" % (player["hp"], 100))
print("魔法值：%d/%d" % (player["mp"], 50))
print("攻击力：%d" % player["attack"])
print("防御力：%d" % player["defense"])
print("金币：%d" % player["gold"])

# 输出成就
if player["level"] >= 10:
    print("\n恭喜你获得了“勇者”成就！")
if player["gold"] >= 100:
    print("恭喜你获得了“富翁”成就！")
if "铁剑" in [item["name"] for item in player["items"]] and "铁甲" in [item["name"] for item in player["items"]]:
    print("恭喜你获得了“装备全套”成就！")

# 输出感谢信息
print("\n感谢您的游玩！")
